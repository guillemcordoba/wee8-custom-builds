From 114c3ff58ca3ee28b983489bd69da96847dda1e5 Mon Sep 17 00:00:00 2001
From: Edoardo Marangoni <ecmm@anche.no>
Date: Fri, 17 Jan 2025 11:27:01 +0100
Subject: [PATCH 1/2] Add ability to define sharedness of memory

---
 src/wasm/c-api.cc            | 6 ++++--
 third_party/wasm-api/wasm.h  | 1 +
 third_party/wasm-api/wasm.hh | 5 +++--
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/wasm/c-api.cc b/src/wasm/c-api.cc
index 9d59c97e225..4ad54f3f6cb 100644
--- a/src/wasm/c-api.cc
+++ b/src/wasm/c-api.cc
@@ -209,7 +209,8 @@ own<ExternType> GetImportExportType(const i::wasm::WasmModule* module,
       Limits limits(memory.initial_pages,
                     memory.has_maximum_pages
                         ? v8::base::checked_cast<int32_t>(memory.maximum_pages)
-                        : -1);
+                        : -1,
+                    memory.is_shared);
       return MemoryType::make(limits);
     }
     case i::wasm::kExternalGlobal: {
@@ -2286,7 +2287,8 @@ WASM_EXPORT auto Memory::make(Store* store_abs, const MemoryType* type)
     if (maximum > i::wasm::kSpecMaxMemory32Pages) return nullptr;
   }
   // TODO(wasm+): Support shared memory and memory64.
-  i::SharedFlag shared = i::SharedFlag::kNotShared;
+  i::SharedFlag shared =
+      limits.shared ? i::SharedFlag::kShared : i::SharedFlag::kNotShared;
   i::wasm::AddressType address_type = i::wasm::AddressType::kI32;
   i::DirectHandle<i::WasmMemoryObject> memory_obj;
   if (!i::WasmMemoryObject::New(isolate, minimum, maximum, shared, address_type)
diff --git a/third_party/wasm-api/wasm.h b/third_party/wasm-api/wasm.h
index 99a35dabc77..50a05297712 100644
--- a/third_party/wasm-api/wasm.h
+++ b/third_party/wasm-api/wasm.h
@@ -158,6 +158,7 @@ enum wasm_mutability_enum {
 typedef struct wasm_limits_t {
   uint32_t min;
   uint32_t max;
+  bool shared;
 } wasm_limits_t;
 
 static const uint32_t wasm_limits_max_default = 0xffffffff;
diff --git a/third_party/wasm-api/wasm.hh b/third_party/wasm-api/wasm.hh
index cb1b304bf23..b079cf3934a 100644
--- a/third_party/wasm-api/wasm.hh
+++ b/third_party/wasm-api/wasm.hh
@@ -255,9 +255,10 @@ enum class Mutability : uint8_t { CONST, VAR };
 struct Limits {
   uint32_t min;
   uint32_t max;
+  bool shared;
 
-  Limits(uint32_t min, uint32_t max = std::numeric_limits<uint32_t>::max()) :
-    min(min), max(max) {}
+  Limits(uint32_t min, uint32_t max = std::numeric_limits<uint32_t>::max(), bool shared = false) :
+    min(min), max(max), shared(shared) {}
 };
 
 
-- 
2.48.1

